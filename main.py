from config import *
from trousers import *
from sneakers import *
from initPics import *
from frostyBoots import *
from womenCoat import *
from hat import *
from sweater import *
from downJacket import *
from Long import *
from Hoody import *
from tShirt import *
from costumes import *
from bag import *
from zipp import *
from zipHoody import *
from shorts import *

bot = Bot(token=token)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    try:
        #–û–±—å—è–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        global beginQuestion
        global markupQuestion
        global checker
        #–ó–∞–≤chosenOrder = []
        # chosenOrder.append(projectCost, projectName)
        # print(chosenOrder)—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ try: except:
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        cid = message.chat.id
        #–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        beginQuestion = await bot.send_message(cid, helloStart)
        #–¢–æ–≤–∞—Ä
        #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä–∫–∞–ø–æ–≤
        if checker == 0:
            ikm.add(item_Trousers, item_Sneakers, item_snowySneakers, item_womenJacket, item_Hat, item_Sweater, item_downJacket, item_Long, item_hoody, item_TShirt, item_Suits, item_Bag, item_Zip, item_zipHoody, item_Shorts)
            checker += 1
        markupQuestion = await bot.send_message(cid, questionWant,reply_markup=ikm,parse_mode='Markdown')
    except:
        await bot.send_message(cid, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')
        
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫

@dp.callback_query_handler(lambda call: call.data == 'item_Trousers')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(trousersProject, trousersDoodle, trousersMinusTwo, trousersAlien, trousersJnco, trousersHCW, trousersFeos, trousersDDG, trousersBlackWork, trousersKeramo)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1.5)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_Sneakers')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(sneakersAdidas, sneakersSenj, sneakersRaalbckkBlack, sneakersRaalbckkWhite)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1.5)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_snowySneakers')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(frostyBoots)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1.5)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_womenJacket')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(womenCoat)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1.5)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_Sweater')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(sweaterEvangelion, sweaterRetro, sweaterProject, sweaterMCB, sweatery2k)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1.5)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_Hat')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(hat)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_hoody')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(hoodyMadeeExtreme, hoodyPistolKiss, hoodyCalifornia, hoodySkeletons, hoodyGhost, hoodyHoodie)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_downJacket')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(downJacket)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')


@dp.callback_query_handler(lambda call: call.data == 'item_Long')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(long)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_TShirt')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(tShirtsizeG, tShirtSize, tShirtExtreme, tShirtDestroyLonely, tShirtworldWide, tShirtLightning)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_Suits')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(costumes)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_Bag')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(bag, bagFW, bagFF)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_Zip')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(zipDK, zipGothic, zipVicinity)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.callback_query_handler(lambda call: call.data == 'item_zipHoody')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(ziphoody)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')


@dp.callback_query_handler(lambda call: call.data == 'item_Shorts')
async def searchTrousers(query: types.CallbackQuery):
    global user_id
    global forKeyboardMarkup
    try:
        buttonBack = KeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´")
        Back = ReplyKeyboardMarkup(resize_keyboard=True).add(buttonBack)
        #–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        ist = types.InlineKeyboardMarkup()
        user_id = query.message.chat.id
        #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–Ω–æ–ø–æ–∫
        await beginQuestion.delete()
        await markupQuestion.delete()
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        ist.add(shortsproject, shortstrue, starsmth)
        forKeyboardMarkup = await bot.send_message(user_id, second, reply_markup = Back)
        time.sleep(1)
        #–î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ä–∫–∞–ø–æ–≤
        await bot.send_message(user_id, searching, reply_markup = ist,parse_mode='Markdown')
    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')





@dp.callback_query_handler()
async def clickProject(callback_query: types.CallbackQuery):
    global checker1
    global forEditing
    global msgforchosepred
    global chosenOrder
    global isExist
    call_data = callback_query.data
    user_id = callback_query.message.chat.id

    try:
        #1
        if call_data == "trousersProject":
            chosenOrder = []
            chosenOrder.append(trousers_cost[0])
            chosenOrder.append(trousers_brand[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(projectCost, projectName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            project = await bot.send_photo(user_id,photo=photoPathFproject, reply_markup=ifp, caption="–†–µ–ø —à—Ç–∞–Ω–∏ Project\nS/M/L/XL/2XL\nUNISEX\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(project)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
            

        #2
        elif call_data == "trousersDoodle":
            chosenOrder = []
            chosenOrder.append(trousers_cost[1])
            chosenOrder.append(trousers_brand[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(doodleCost, doodleName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            doodle = await bot.send_photo(user_id,photo=photoPathFdoodle, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Doodle\nS/M/L/XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(doodle)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #3

        elif call_data == "trousersMinusTwo":
            chosenOrder = []
            chosenOrder.append(trousers_cost[2])
            chosenOrder.append(trousers_brand[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(minusTwoCost, minusTwoName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            minusTwo = await bot.send_photo(user_id,photo=photoPathFminustwo, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Minus Two\nS/M/L/XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(minusTwo)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)         
        #4
        
        elif call_data == "trousersAlien":
            chosenOrder = []
            chosenOrder.append(trousers_cost[3])
            chosenOrder.append(trousers_brand[3])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(alienCost, alienName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            Alien = await bot.send_photo(user_id,photo=photoPathFalien, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Alien\nS/M/L/XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(Alien)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        #5   
        
        elif call_data == "trousersJnco":
            chosenOrder = []
            chosenOrder.append(trousers_cost[4])
            chosenOrder.append(trousers_brand[4])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(jncoCost, jncoName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            Jnco = await bot.send_photo(user_id,photo=photoPathFjnco, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ JNCO\nS/M/L/XL/2XL\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(Jnco)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        #6    
        
        elif call_data == "trousersHCW":
            chosenOrder = []
            chosenOrder.append(trousers_cost[5])
            chosenOrder.append(trousers_brand[5])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(hcwCost, hcwName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            HCW = await bot.send_photo(user_id,photo=photoPathFhcw, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Heaven can wait\nS/M/L/XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(HCW)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        #7  
        
        elif call_data == "trousersFeos":
            chosenOrder = []
            chosenOrder.append(trousers_cost[6])
            chosenOrder.append(trousers_brand[6])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(feosCost, feosName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            Feos = await bot.send_photo(user_id,photo=photoPathFfeos, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Feos\nS/M/L/XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(Feos)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        #8  
        
        elif call_data == "trousersDDG":
            chosenOrder = []
            chosenOrder.append(trousers_cost[7])
            chosenOrder.append(trousers_brand[7])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(ddgCost, ddgName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            ddg = await bot.send_photo(user_id,photo=photoPathFddg, reply_markup=ifp, caption="–†–µ–ø –®—Ç–∞–Ω–∏ DDG\nS/M/L/XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(ddg)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        #9   
        
        elif call_data == "trousersBlackWork":
            chosenOrder = []
            chosenOrder.append(trousers_cost[8])
            chosenOrder.append(trousers_brand[8])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(blackworkCost, blackworkName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            blackwork = await bot.send_photo(user_id,photo=photoPathFblackwork, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Blackwork\nS/M/L/XL/2XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(blackwork)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        #10   
        
        elif call_data == "trousersKeramo":
            chosenOrder = []
            chosenOrder.append(trousers_cost[9])
            chosenOrder.append(trousers_brand[9])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(keramoCost, keramoName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            keramo = await bot.send_photo(user_id,photo=photoPathFkeramo, reply_markup=ifp, caption="–®—Ç–∞–Ω–∏ Keramo\nS/M/L/XL/2XL\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(keramo)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "sneakersAdidas":
            chosenOrder = []
            chosenOrder.append(sneakers_cost[0])
            chosenOrder.append(sneakers_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(adidasCost, adidasName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFadidas, reply_markup=ifp, caption="The South Park x adidas Campus 80s\n36-46\n–¶—ñ–Ω–∞ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ä–æ–∑–º—ñ—Ä—É\n–¶—è –ø–∞—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ–¥ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        

        if call_data == "sneakersSenj":
            chosenOrder = []
            chosenOrder.append(sneakers_cost[1])
            chosenOrder.append(sneakers_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(senjCost, senjName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFsenj, reply_markup=ifp, caption="–ö—Ä–æ—Å—ñ–≤–∫–∏ Senj\n–†–æ–∑–º—ñ—Ä–∏ 36-44\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)



        if call_data == "sneakersRaalbckkBlack":
            chosenOrder = []
            chosenOrder.append(sneakers_cost[2])
            chosenOrder.append(sneakers_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(raalbckkCostBlack, raalbckkNameBlack, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFraalbckkBlack, reply_markup=ifp, caption="–ö—Ä–æ—Å—ñ–≤–∫–∏ RAALBCKK\n–†–æ–∑–º—ñ—Ä–∏ 36-44\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
            


        if call_data == "sneakersRaalbckkWhite":
            chosenOrder = []
            chosenOrder.append(sneakers_cost[3])
            chosenOrder.append(sneakers_name[3])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(raalbckkCostWhite, raalbckkNameWhite, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFraalbckkWhite, reply_markup=ifp, caption="–ö—Ä–æ—Å—ñ–≤–∫–∏ RAALBCKK\n–†–æ–∑–º—ñ—Ä–∏ 36-44\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)


        
        if call_data == "sneakersNewRock":
            chosenOrder = []
            chosenOrder.append(sneakers_cost[4])
            chosenOrder.append(sneakers_name[4])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(newRockCost, newRockName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFNewRock, reply_markup=ifp, caption="–ù—å—é –†–æ–∫–∏\n–†–æ–∑–º—ñ—Ä–∏ 35-45(–ú–µ–Ω—à—ñ —Ä–æ–∑–º—ñ—Ä–∏ –¥–µ—à–µ–≤—à—ñ)\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –∑–∏–º–Ω–∏–µ

        if call_data == "frostyBoots":
            chosenOrder = []
            chosenOrder.append(frostyBoots_cost[0])
            chosenOrder.append(frostyBoots_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(fronstyBootsCost, frostyBootsName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFFrostyBoots, reply_markup=ifp, caption="–ó–∏–º–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏\n–†–æ–∑–º—ñ—Ä–∏: 35-46\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10\n–î–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–µ–ø–ª–∞, –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ö—É—Ç—Ä–æ\n–ë–∞–≥–∞—Ç–æ —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤ —É –Ω–∞—è–≤–Ω–æ—Å—Ç—ñüö®\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–ü–∞–ª—å—Ç–∏—à–∫–æ

        if call_data == "womenCoat":
            chosenOrder = []
            chosenOrder.append(frostyBoots_cost[0])
            chosenOrder.append(frostyBoots_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(womenCoatCost, womenCoatName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFwomenCoat, reply_markup=ifp, caption="‚ö°–ñ—ñ–Ω–æ—á–µ –ó–∏–º–æ–≤–µ –ü–∞–ª—å—Ç–æ‚ö°\nS/M/L/XL/XXL\n–í–∏—Ä–æ–±–ª–µ–Ω–æ –≤ –ê–º–µ—Ä–∏—Ü—ñü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)


        #–®–∞–ø–∫–∞

        if call_data == "hat":
            chosenOrder = []
            chosenOrder.append(hat_cost[0])
            chosenOrder.append(hat_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(hatCost, hatName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFhat, reply_markup=ifp, caption="‚ö°–®–∞–ø–∫–∏ Beanie‚ö°\n\n–í–∏—Ä–æ–±–ª–µ–Ω–æ –≤ –ê–º–µ—Ä–∏—Ü—ñü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–°–≤–∏—Ç–µ—Ä–∞

        if call_data == "sweaterEvangelion":
            chosenOrder = []
            chosenOrder.append(sweater_cost[0])
            chosenOrder.append(sweater_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(EvangelionCost, EvangelionName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFEvangelion, reply_markup=ifp, caption="‚ö°–°–≤–µ—Ç—Ä Evangelion‚ö°\n\nM/L/XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "sweaterRetro":
            chosenOrder = []
            chosenOrder.append(sweater_cost[1])
            chosenOrder.append(sweater_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(RetroCost, RetroName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFRetro, reply_markup=ifp, caption="‚ö°–°–≤–µ—Ç—Ä Project‚ö°\n\nS/M/L/XL/2XL—ñü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "sweaterProject":
            chosenOrder = []
            chosenOrder.append(sweater_cost[2])
            chosenOrder.append(sweater_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(projectCost, projectName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFprojectS, reply_markup=ifp, caption="‚ö°–°–≤–µ—Ç—Ä MCB‚ö°\n\nS/M/L/XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "sweaterMCB":
            chosenOrder = []
            chosenOrder.append(sweater_cost[3])
            chosenOrder.append(sweater_name[3])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(MCBCost, MCBName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFMCB, reply_markup=ifp, caption="‚ö°–°–≤–µ—Ç—Ä y2k‚ö°\n\nM/L/XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "sweatery2k":
            chosenOrder = []
            chosenOrder.append(sweater_cost[4])
            chosenOrder.append(sweater_name[4])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(y2kCost, y2kName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFy2k, reply_markup=ifp, caption="‚ö°–®–∞–ø–∫–∏ Beanie‚ö°\n\n–í–∏—Ä–æ–±–ª–µ–Ω–æ –≤ –ê–º–µ—Ä–∏—Ü—ñü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–ü—É—Ö–æ–≤–∏–∫

        if call_data == "downJacket":
            chosenOrder = []
            chosenOrder.append(downJacket_cost[0])
            chosenOrder.append(downJacket_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(downJacketCost, downJacketName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFdownJacket, reply_markup=ifp, caption="‚ö°–ü—É—Ö–æ–≤–∏–∫ Hiraso‚ö°\n\nS/M/L/XL/2XL/3XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)


        #–õ–æ–Ω–≥–∏

        if call_data == "long":
            chosenOrder = []
            chosenOrder.append(long_cost[0])
            chosenOrder.append(long_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(longCost, longName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFLong, reply_markup=ifp, caption="‚ö°–õ–æ–Ω–≥ moonscars‚ö°\n\n\M/L/XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–•—É–¥–∏

        if call_data == "hoodyMadeeExtreme":
            chosenOrder = []
            chosenOrder.append(hoody_cost[0])
            chosenOrder.append(hoody_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(MadeeExtremeCost, MadeeExtremeName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFMadeeExtreme, reply_markup=ifp, caption="‚ö°–•—É–¥—ñ Madeextreme‚ö°\n\nM/L/XL/2XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "hoodyPistolKiss":
            chosenOrder = []
            chosenOrder.append(hoody_cost[1])
            chosenOrder.append(hoody_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(PistolKissCost, PistolKissName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFPistolKiss, reply_markup=ifp, caption="‚ö°–•—É–¥—ñ Pistol Kiss‚ö°\n\n\S/M/L/XL/2XL/3XL/4XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "hoodyCalifornia":
            chosenOrder = []
            chosenOrder.append(hoody_cost[2])
            chosenOrder.append(hoody_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(CaliforniaCost, CaliforniaName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFCalifornia, reply_markup=ifp, caption="‚ö°–ü—É—Ö–Ω–∞—Å—Ç–∞ —Ö—É–¥—ñ California‚ö°\n\nS/M/L/XL/2XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "hoodySkeletons":
            chosenOrder = []
            chosenOrder.append(hoody_cost[3])
            chosenOrder.append(hoody_name[3])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(SkeletonsCost, SkeletonsName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFSkeletons, reply_markup=ifp, caption="‚ö°–•—É–¥—ñ skeletons in flame‚ö°\n\nM/L/XL/2XLü¶Ö\nUNISEXüíã\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "hoodyGhost":
            chosenOrder = []
            chosenOrder.append(hoody_cost[4])
            chosenOrder.append(hoody_name[4])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(GhostCost, GhostName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFGhost, reply_markup=ifp, caption="‚ö°–•—É–¥—ñ kids see ghosts‚ö°\n\nS/M/L/XLü¶Ö\nUNISEXüíã\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "hoodyHoodie":
            chosenOrder = []
            chosenOrder.append(hoody_cost[5])
            chosenOrder.append(hoody_name[5])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(HoodieCost, HoodieName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFHoodie, reply_markup=ifp, caption="‚ö°Hoodie‚ö°\n\nM/L/XL/XXLü¶Ö\nUNISEXüëÑ\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)


        #–§—É—Ç–±–æ–ª–∫–∏


        if call_data == "tShirtsizeG":
            chosenOrder = []
            chosenOrder.append(tShirt_cost[0])
            chosenOrder.append(tShirt_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(overSizeGCost, overSizeGName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFsizeG, reply_markup=ifp, caption="‚ö°–§—É—Ç–±–æ–ª–∫–∞ Oversize GPunk‚ö°\n\nM/L/XL/2XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "tShirtSize":
            chosenOrder = []
            chosenOrder.append(tShirt_cost[1])
            chosenOrder.append(tShirt_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(overSizeCost, overSizeName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFsize, reply_markup=ifp, caption="‚ö°–û–≤–µ—Ä—Å–∞–π–∑ —Ñ—É—Ç–±–æ–ª–∫–∞‚ö°\n\nS/M/L/XL/2XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "tShirtExtreme":
            chosenOrder = []
            chosenOrder.append(tShirt_cost[2])
            chosenOrder.append(tShirt_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(madeExtremeCost, madeExtremeName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFextreme, reply_markup=ifp, caption="‚ö°–§—É—Ç–±–æ–ª–∫–∞ Made extreme‚ö°\n\nM/L/XL/2XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "tShirtDestroyLonely":
            chosenOrder = []
            chosenOrder.append(tShirt_cost[3])
            chosenOrder.append(tShirt_name[3])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(destroyLonelyCost, destroyLonelyName, allSupport, allOrder)
            if checker1 == 1:
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFdestroyLonely, reply_markup=ifp, caption="‚ö°–§—É—Ç–±–æ–ª–∫–∞ Destroylonely‚ö°\n\nM/L/XL/2XL/3XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "tShirtworldWide":
            chosenOrder = []
            chosenOrder.append(tShirt_cost[4])
            chosenOrder.append(tShirt_name[4])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(worldWideCost, worldWideName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFworldWide, reply_markup=ifp, caption="‚ö°–§—É—Ç–±–æ–ª–∫–∞ worldwide‚ö°\n\nS/M/L/XL/2XL/3XL/4XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "tShirtLightning":
            chosenOrder = []
            chosenOrder.append(tShirt_cost[5])
            chosenOrder.append(tShirt_name[5])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(LightningCost, LightningName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFlightning, reply_markup=ifp, caption="‚ö°–§—É—Ç–±–æ–ª–æ—á–∫–∞ Lightning‚ö°\n\nS/M/L/XL/2XLü¶Ö\nUNISEXüëÑ\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–ö–æ—Å—Ç—é–º—ã

        if call_data == "costumes":
            chosenOrder = []
            chosenOrder.append(costumes_cost[0])
            chosenOrder.append(costumes_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(costumesCost, costumesName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFcostumes, reply_markup=ifp, caption="‚ö°–ö–æ—Å—Ç—é–º–∏ NAMED‚ö°\n\nS/M/L/XLü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        
        #–°—É–º–∫–∏

        
        if call_data == "bagFW":
            chosenOrder = []
            chosenOrder.append(bag_cost[0])
            chosenOrder.append(bag_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(bagFWCost, bagFWName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFW, reply_markup=ifp, caption="‚ö°–°—É–º–æ—á–∫–∞ –¥–ª—è –¥—ñ–≤—á–∞—Çüíã‚ö°\n\n23.5 —Ö 7.5 —Ö 14—Å–ºü¶Ö\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
        
        if call_data == "bag":
            chosenOrder = []
            chosenOrder.append(bag_cost[1])
            chosenOrder.append(bag_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(bagCost, bagName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFbag, reply_markup=ifp, caption="‚ö°üëú–°—É–º–æ—á–∫–∞üëú‚ö°\n\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        
        if call_data == "bagFF":
            chosenOrder = []
            chosenOrder.append(bag_cost[2])
            chosenOrder.append(bag_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(bagFFCost, bagFFName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFFF, reply_markup=ifp, caption="‚ö°üíº–°—É–º–æ—á–∫–∞ –Ω–∞ —Ä–∏–±–∞–ª–∫—Éüíº‚ö°\n\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–ó–∏–ø–∫–∞

        if call_data == "zipDK":
            chosenOrder = []
            chosenOrder.append(zip_cost[0])
            chosenOrder.append(zip_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(zipDKCost, zipDKName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFdarkAngel, reply_markup=ifp, caption="‚ö°–ó—ñ–ø —Ö—É–¥—ñ Dark Angel‚ö°\nS/M/L/XL/2XL\nUNISEXüíã\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)
            
        if call_data == "zipVicinity":
            chosenOrder = []
            chosenOrder.append(zip_cost[1])
            chosenOrder.append(zip_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(zipVicinityCost, zipVicinityName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFvicinity, reply_markup=ifp, caption="‚ö°üîØ–ó—ñ–ø–∫–∞ VicinityüîØ‚ö°\nS/M/L/XL/2XL\nUNISEXüíã\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "zipGothic":
            chosenOrder = []
            chosenOrder.append(zip_cost[2])
            chosenOrder.append(zip_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(zipGothicCost, zipGothicName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFgothic, reply_markup=ifp, caption="‚ö°ü¶áGothic –ó—ñ–ø–∫–∞ü¶á‚ö°\nM/L/XL/2XL\nUNISEXüíã\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–ó–∏–ø–∫–∞-–•—É–¥–∞–∫

        
        if call_data == "ziphoody":
            chosenOrder = []
            chosenOrder.append(ziphoody_cost[0])
            chosenOrder.append(ziphoody_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(ziphoodyCost, ziphoodyName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFzipHoody, reply_markup=ifp, caption="‚ö°–ü—É—Ö–Ω–∞—Å—Ç–∞ –∫–æ—Ñ—Ç–∞ Struggle‚ö°\nS/M/L/XL/2XL\n\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        #–®–æ—Ä—Ç—ã

        if call_data == "shortsproject":
            chosenOrder = []
            chosenOrder.append(shorts_cost[0])
            chosenOrder.append(shorts_name[0])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(projectCost, projectName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFshortsProject, reply_markup=ifp, caption="‚ö°–®–æ—Ä—Ç–∏ Project‚ö°\nS/M/L/XL/2XL\n\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "shortstrue":
            chosenOrder = []
            chosenOrder.append(shorts_cost[1])
            chosenOrder.append(shorts_name[1])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(trueCost, trueName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFshortsTrue, reply_markup=ifp, caption="‚ö°–®–æ—Ä—Ç–∏ –¥–ª—è —Ç—Ä—É —Ä–µ–ø–µ—Ä—ñ–≤‚ö°\nS/M/L/XL/2XL\n\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)

        if call_data == "starsmth":
            chosenOrder = []
            chosenOrder.append(shorts_cost[2])
            chosenOrder.append(shorts_name[2])
            print(chosenOrder)
            ifp = types.InlineKeyboardMarkup()
            ifp.add(starCost, starName, allSupport, allOrder)
            if checker1 == 1: 
                await forEditing.delete()
                checker1 += 1
            adidas = await bot.send_photo(user_id,photo=photoPathFshortsStar, reply_markup=ifp, caption="‚ö°–®–æ—Ä—Ç–∏ Star Pattern‚ö°\nS/M/L/XL/2XL\n\n–Ø–∫—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—É 10/10üï∂Ô∏è\n–î–æ—Å—Ç–∞–≤–∫–∞ 11-22 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤üöö")
            if len(isExist) == 0 or len(isExist) == 1:
                isExist.append(adidas)
                print(len(isExist))
            if len(isExist) == 2:
                await isExist[0].delete()
                isExist.pop(0)






        

            



            













        if call_data == "allorder":
            ifo = types.InlineKeyboardMarkup()
            ifo.add(percentage_240,percentage_50,percentage_100)
            TEXTinfo = await bot.send_message(user_id, text="–Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, –Ω–µ —î –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–æ—é 100% –≤—ñ–¥ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—É, —Ç–æ–¥—ñ –≤–∏ –¥–æ–ø–ª–∞—Ç–∏—Ç–µ —ñ–Ω—à—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥—Ä–æ—à–µ–π –∑ –∫–æ–º—ñ—Å—ñ—î—é –Ω–∞ –ù–æ–≤—ñ–π –ü–æ—á—Ç—ñ‚úâÔ∏è")
            TEXTchoose = await bot.send_message(user_id, text="–ë–∞–∂–∞—î—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–æ—éüíó", reply_markup=ifo)

        if call_data == "allsupport":
            await bot.send_message(user_id, text="–ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞–º –±—É–¥—å –ª–∞—Å–∫–∞ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º—É –≤ –Ω–∞—à–æ–º—É –±–æ—Ç—ñüòá")
            await bot.send_message(user_id, text="–î—è–∫—É—é, —â–æ –¥–æ–ø–æ–º–∞–≥–∞—î—Ç–µ –ø–æ–∫—Ä–∞—â—É–≤–∞—Ç–∏ —Ä–æ–±–æ—Ç—É —Ç–µ–ª–µ–≥—Ä–∞–º—É –±–æ—Ç—Éüíó")
            await bot.send_message(user_id, text="üìé–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∞–π–¥—ñ: @MHshopUkraineüìé")

        if call_data == "percentage_240":
            chosenOrder.append(percentages[0])
            ifpm = types.InlineKeyboardMarkup()
            ifpm.add(inline)
            TEXTpayment_240 = await bot.send_message(user_id, text="–í–∏ –æ–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É 240 –≥—Ä–∏–≤–µ–Ω—å‚úÖ")
            TEXTsendTY = await bot.send_message(user_id, text="–Ø–∫ –±–∞–∂–∞—î—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≥—Ä–æ—à—ñ –Ω–∞ –Ω–∞—à—ñ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏?", reply_markup=ifpm)
        elif call_data == "percentage_50":
            chosenOrder.append(percentages[1])
            ifpm = types.InlineKeyboardMarkup()
            ifpm.add(inline)
            TEXTpayment_50 = await bot.send_message(user_id, text="–í–∏ –æ–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É 50% –≤—ñ–¥ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—É‚úÖ")
            TEXTsendTY = await bot.send_message(user_id, text="–Ø–∫ –±–∞–∂–∞—î—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≥—Ä–æ—à—ñ –Ω–∞ –Ω–∞—à—ñ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏?", reply_markup=ifpm)
        elif call_data == "percentage_100":
            chosenOrder.append(percentages[2])
            ifpm = types.InlineKeyboardMarkup()
            ifpm.add(inline)
            TEXTpayment_100 = await bot.send_message(user_id, text="–í–∏ –æ–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É 100% –≤—ñ–¥ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—É‚úÖ")
            TEXTsendTY = await bot.send_message(user_id, text="–Ø–∫ –±–∞–∂–∞—î—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≥—Ä–æ—à—ñ –Ω–∞ –Ω–∞—à—ñ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏?", reply_markup=ifpm)

        if call_data == "inline":
            global purchase
            ifcc = InlineKeyboardMarkup()
            ifcc.add(correctly)
            purchase = await bot.send_message(user_id, text=f"üíå–Ü–º'—è —Ä–µ—á—ñ: {chosenOrder[1]}üíå\n\nüí∏–¶—ñ–Ω–∞: {chosenOrder[0]} –≥—Ä–∏–≤–µ–Ω—åüí∏\n\nüí≥–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: {chosenOrder[2]}üí≥\n\nüåº–ê–π–¥—ñ –∑–∞–º–æ–≤–Ω–∏–∫–∞: {user_id}üåº\n\nüëÄ–ù—ñ–∫–Ω–µ–π–º –∑–∞–º–æ–≤–Ω–∏–∫–∞: {callback_query.from_user.username}üëÄ")
            await bot.send_message(user_id, text="–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è, —â–æ –≤–∏ –∑—Ä–æ–±–∏–ª–∏, –≤—ñ—Ä–Ω–µ?", reply_markup=ifcc)

        if call_data == "correctly":
            await bot.send_message(6471709977, text=f"üëÄ–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—èüëÄ \n\n{purchase}")
            await bot.send_message(user_id, text="–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–º‚úÖ")
            await bot.send_message(user_id, text="–ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –∑ –≤–∞–º–∏ –∑–≤'—è–∂–µ—Ç—å—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—èüòá")

    except Exception as ex:
        await bot.send_message(user_id, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

@dp.message_handler()
async def support(message: types.Message):
    global beginQuestion
    global markupQuestion
    global ikm
    try:
        if message.text == "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüí´":
            cid = message.chat.id
            ikm = types.InlineKeyboardMarkup()
            ikm.add(item_Trousers, item_Sneakers, item_snowySneakers, item_womenJacket, item_Hat, item_Sweater, item_downJacket, item_Long, item_hoody, item_TShirt, item_Suits, item_Bag, item_Zip, item_zipHoody, item_Shorts)
            beginQuestion = await bot.send_message(cid, helloStart)
            markupQuestion = await bot.send_message(cid, questionWant,reply_markup=ikm,parse_mode='Markdown')
    except Exception as ex:
        await bot.send_message(cid, text="–ü–æ–º–∏–ª–∫–∞, –∑–∞–¥–ª—è —ó—ó —É—Å—É–Ω–µ–Ω–Ω—è, –ø—Ä–æ–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /startüëÄ", parse_mode='Markdown')

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)